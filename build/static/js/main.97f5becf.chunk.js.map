{"version":3,"sources":["validation/formSchema.js","components/order.js","components/form.js","components/navigation.js","components/footer.js","components/home.js","App.js","index.js"],"names":["yup","shape","size","oneOf","sauces","pepperoni","sausage","salami","canadianBacon","grilledChicken","onions","greenBellPeppers","kalamataOlives","freshGarlic","pineapple","extraCheese","specialCrusts","specialInstructions","name","required","min","Order","details","className","toppings","length","map","choose","idx","key","substitutes","instructions","initialFormValues","ketoCrust","glutenFreeCrust","initialFormErrors","initialOrders","PizzaForm","useState","orders","setOrders","formValues","setFormValues","formErorrs","setFormErrors","disabled","setDisabled","inputChange","value","schema","validate","then","valid","catch","error","errors","onChange","evt","target","type","checked","orderSubmit","newOrder","axios","post","response","data","console","log","postNewOrder","sauce","filter","trim","useEffect","isValid","onSubmit","preventDefault","order","id","Navigation","to","Footer","Home","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.97f5becf.chunk.js","sourcesContent":["import * as yup from 'yup'\n\nexport default yup.object().shape({\n    size: yup.string()\n    .oneOf(['10\"','12\"','14\"'],'size selection is required'),\n\n    sauces: yup.string()\n    .oneOf(['originalRed','garlicRanch','bbqSauce','whiteSauce','noSauce'],'sauce selection is required'),\n\n\n    pepperoni: yup.boolean(),\n    sausage: yup.boolean(),\n    salami: yup.boolean(),\n    canadianBacon: yup.boolean(),\n    grilledChicken: yup.boolean(),\n    onions: yup.boolean(),\n    greenBellPeppers: yup.boolean(),\n    kalamataOlives: yup.boolean(),\n    freshGarlic: yup.boolean(),\n    pineapple: yup.boolean(),\n    extraCheese: yup.boolean(),\n\n    specialCrusts: yup.string(),\n    \n    specialInstructions: yup.string(),\n    \n    name: yup.string()\n    .required('name is required')\n    .min(2, 'must be at least 2 characters'),\n\n})","import React from 'react'\n\nexport default function Order({details}){\n    if (!details){\n        return<p>Working on getting you complted order details...</p>\n    }\n    return(\n        <div className = \"orderDetailsContainer\">\n            <h2>{details.name}</h2>\n            <p>Pizza Size: {details.size}</p>\n            {!!details.toppings && !!details.toppings.length &&\n                <div>\n                    Toppings:\n                    <ul>\n                        {details.toppings.map((choose, idx)=> \n                        <li key = {idx}>{choose}</li>\n                        )}\n                    </ul>\n                 </div>\n            }\n            <p>Special Crust: {details.substitutes}</p>\n            <p>Special Instructions: {details.instructions} </p>\n        </div>\n    )\n}","import React, {useState, useEffect} from 'react'\nimport * as yup from 'yup'\nimport schema from '../validation/formSchema'\nimport axios from 'axios'\nimport Order from './order'\n\n\n//INITIAL VALUES\nconst initialFormValues={\n    //Text inputs\n    specialInstructions: '',\n    name: '',\n\n    //Radio Buttons\n    sauces: '',\n    ketoCrust: '', \n    glutenFreeCrust: '', \n\n    //Checkboxes\n    pepperoni: false,\n    sausage: false,\n    salami: false,\n    canadianBacon: false,\n    grilledChicken: false,\n    onions: false,\n    greenBellPeppers: false,\n    kalamataOlives: false,\n    freshGarlic: false,\n    pineapple: false,\n    extraCheese: false,\n    //Dropdown\n      size: '',\n  }\n  const initialFormErrors = {\n      size: '',\n      sauces: '',\n      name: '',\n  }\n  const initialOrders = []\n  const initialDisabled = true\n\n//FUNTION FOR FORM \nexport default function PizzaForm(){\n\n    const [orders, setOrders] = useState(initialOrders)\n    const [formValues, setFormValues] = useState(initialFormValues)\n    const [formErorrs, setFormErrors] = useState(initialFormErrors)\n    const [disabled, setDisabled] = useState(initialDisabled)\n\n\n    const postNewOrder = newOrder => {\n        axios.post('https://reqres.in/api/users', newOrder)\n        .then(response =>{\n            setOrders([...orders, response.data])\n            setFormValues(initialFormValues)\n        })\n        .catch(error =>{\n            console.log(error)\n        })\n    }\n\n    const validate = (name, value) => {\n        yup\n        .reach(schema, name)\n        .validate(value)\n        .then(valid =>{\n            setFormErrors({\n                ...formErorrs,[name]:\"\"\n            })\n        })\n        .catch(error =>{\n            setFormErrors({\n                ...formErorrs,[name]:error.errors[0]\n            })\n        })\n    }\n\n    const inputChange = (name, value) =>{\n        validate(name, value)\n        setFormValues({\n            ...formValues, \n            [name]: value\n        })\n    }\n\n    const onChange = evt => {\n        const {name, value, type, checked} = evt.target\n        const valueToUse = type === 'checkbox' ? checked : value\n        inputChange(name, valueToUse)\n    }\n\n    const orderSubmit = () => {\n        const newOrder = {\n            size: formValues.size,\n            sauce: formValues.sauces,\n            toppings: ['pepperoni','sausage','salami','canadianBacon','grilledChicken','onions', 'greenBellPeppers','kalamataOlives', 'freshGarlic', 'pineapple','extraCheese'].filter(toppings => formValues[toppings]),\n            substitutes: formValues.specialCrusts,\n            name: formValues.name,\n            instructions:formValues.specialInstructions.trim(),\n        }\n        postNewOrder(newOrder)\n        setFormValues(initialFormValues)\n    }\n\n    const onSubmit = evt => {\n        evt.preventDefault()\n        orderSubmit()\n    }\n\n    useEffect(()=>{\n        schema.isValid(formValues)\n        .then(valid =>{\n            setDisabled(!valid)\n        })\n    }, [formValues])\n\n\n    //FORM STRUCTURE\n    return (\n        <div className = 'formContainer'>\n            <form className = \"pizzaForm\" onSubmit = {onSubmit}>\n                <h1>Build Your Own Pizza</h1>\n\n                <div className = \"size\">\n                <h3>Choose Your Size</h3>\n                    <select\n                    onChange = {onChange}\n                    value = {formValues.size}\n                    name='size'\n                    >\n                        <option value = ''>-Select An Option-</option>\n                        <option value = '10\"'>10\"</option>\n                        <option value = '12\"'>12\"</option>\n                        <option value = '14\"'>14\"</option>\n                    </select>\n                </div>\n\n                <div className = \"sauce\">\n                <h3>Choose Your Sauce</h3>\n                   <label>Original Red\n                    <input\n                        type=\"radio\"\n                        name=\"sauces\"\n                        value=\"originalRed\"\n                        checked = {formValues.sauces === 'originalRed'}\n                        onChange = {onChange}\n                    />\n                    </label> \n                    <label>Garlic Ranch\n                    <input\n                        type=\"radio\"\n                        name=\"sauces\"\n                        value=\"garlicRanch\"\n                        checked = {formValues.sauces === 'garlicRanch'}\n                        onChange = {onChange}\n                    />\n                    </label> \n                    <label>BBQ Sauce\n                    <input\n                        type=\"radio\"\n                        name=\"sauces\"\n                        value=\"bbqSauce\"\n                        checked = {formValues.sauces === 'bbqSauce'}\n                        onChange = {onChange}\n                    />\n                    </label> \n                    <label>White Alfredo Sauce\n                    <input\n                        type=\"radio\"\n                        name=\"sauces\"\n                        value=\"whiteSauce\"\n                        checked = {formValues.sauces === 'whiteSauce'}\n                        onChange = {onChange}\n                    />\n                    </label> \n                    <label>No Sauce\n                    <input\n                        type=\"radio\"\n                        name=\"sauces\"\n                        value=\"noSauce\"\n                        checked = {formValues.sauces === 'noSauce'}\n                        onChange = {onChange}\n                    />\n                    </label> \n                </div>\n\n                <div className = \"toppings\">\n                <h3>Add Toppings</h3>\n                <label>Pepperoni\n                    <input\n                    type=\"checkbox\"\n                    name=\"pepperoni\"\n                    checked = {formValues.pepperoni}\n                    onChange = {onChange}\n                    />\n                </label>\n                <label>Sausage\n                    <input\n                    type=\"checkbox\"\n                    name=\"sausage\"\n                    checked = {formValues.sausage}\n                    onChange = {onChange}\n                    />\n                </label>\n                <label>Salami\n                    <input\n                    type=\"checkbox\"\n                    name=\"salami\"\n                    checked = {formValues.salami}\n                    onChange = {onChange}\n                    />\n                </label>\n                <label>Canadian Bacon\n                    <input\n                    type=\"checkbox\"\n                    name=\"canadianBacon\"\n                    checked = {formValues.canadianBacon}\n                    onChange = {onChange}\n                    />\n                </label>\n                <label>Grilled Chicken\n                    <input\n                    type=\"checkbox\"\n                    name=\"grilledChicken\"\n                    checked = {formValues.grilledChicken}\n                    onChange = {onChange}\n                    />\n                </label>\n                <label>Onions\n                    <input\n                    type=\"checkbox\"\n                    name=\"onions\"\n                    checked = {formValues.onions}\n                    onChange = {onChange}\n                    />\n                </label>\n                <label>Green Bell Peppers\n                    <input\n                    type=\"checkbox\"\n                    name=\"greenBellPeppers\"\n                    checked = {formValues.greenBellPeppers}\n                    onChange = {onChange}\n                    />\n                </label>\n                <label>Kalamata olives\n                    <input\n                    type=\"checkbox\"\n                    name=\"kalamataOlives\"\n                    checked = {formValues.kalamataOlives}\n                    onChange = {onChange}\n                    />\n                </label>\n                <label>Fresh Garlic\n                    <input\n                    type=\"checkbox\"\n                    name=\"freshGarlic\"\n                    checked = {formValues.freshGarlic}\n                    onChange = {onChange}\n                    />\n                </label>\n                <label>Pineapple\n                    <input\n                    type=\"checkbox\"\n                    name=\"pineapple\"\n                    checked = {formValues.pineapple}\n                    onChange = {onChange}\n                    />\n                </label>\n                <label>Extra Cheese\n                    <input\n                    type=\"checkbox\"\n                    name=\"extraCheese\"\n                    checked = {formValues.extraCheese}\n                    onChange = {onChange}\n                    />\n                </label>\n                </div>\n\n                <div className = \"substitutes\">\n                <h3>Diatary Substitutes</h3>\n                <label>Keto Crust\n                    <input\n                    type=\"radio\"\n                    name=\"specialCrusts\"\n                    value = 'ketoCrust'\n                    checked = {formValues.specialCrusts === 'ketoCrust'}\n                    onChange = {onChange}\n                    />\n                </label>\n                <label>Gluten Free Crust\n                    <input\n                    type=\"radio\"\n                    name=\"specialCrusts\"\n                    value = 'glutenFreeCrust'\n                    checked = {formValues.specialCrusts === 'glutenFreeCrust'}\n                    onChange = {onChange}\n                    />\n                </label>\n                </div>\n\n                <div className = \"specialInstructions\">\n                <h3>Special Instructions</h3>\n                <input\n                value = {formValues.specialInstructions}\n                onChange = {onChange}\n                type='text'\n                name='specialInstructions'\n                />\n                </div>\n\n                <div className = \"customerName\">\n                    <h3>Your Name</h3>\n                    <input \n                        value = {formValues.name}\n                        onChange = {onChange}\n                        type = \"text\"\n                        name = \"name\"\n                        />\n                </div>\n\n\n                <div className = \"submitOrder\">\n                    <button disabled = {disabled}>Add to Order</button>\n                </div>\n\n                <div className = \"errors\">\n                <div>{formErorrs.size}</div>\n                <div>{formErorrs.sauces}</div>\n                <div>{formErorrs.name}</div>\n                </div>\n            </form>\n            \n            {\n                orders.map((order) => {\n                    return (\n                    <Order key ={order.id} details = {order}/>\n                    )\n                })\n            }\n            \n        </div>\n    )\n\n}","import React from 'react'\nimport {Link} from 'react-router-dom'\n\n\nexport default function Navigation(){\n    return(\n        <nav>\n      <h2>Lambda Eats</h2>\n      <button><Link to = '/'>Home</Link></button>\n      <button>Help</button>\n    </nav>\n    )\n}","import React from 'react'\n\nexport default function Footer () {\n    return(\n<footer>\n    <p>Contact us: 555.555.5555 or lambdaeats@lambdaeats.com</p>\n  </footer>\n    )\n}\n\n","import React from 'react'\n\n\nexport default function Home (){\n    return(\n<>\n<section className = 'mainbody'>\n<div>\n  <h1>Your favorite food delivered while coding</h1>\n  <button>Order Pizza!</button>\n</div>\n</section>\n<section className = 'lowerbody'>\n<h3>Food Delivery In Chicago</h3>\n<div className = \"image container\">\n  <div>\n    {/* <img/> */}\n  </div>\n  <div>\n    {/* <img/> */}\n  </div>\n  <div>\n    {/* <img/> */}\n </div>\n  <div>\n    {/* <img/> */}\n  </div>\n   <div>\n     {/* <img/> */}\n  </div>\n   <div>\n    {/* <img/> */}\n  </div>\n</div>\n</section>\n</>\n    )\n}\n","import React from \"react\";\nimport { Switch, Route} from 'react-router-dom'\nimport PizzaForm from './components/form'\nimport Navigation from './components/navigation'\nimport Footer from './components/footer'\nimport Home from './components/home'\n\nconst App = () => {\n\n  return (\n    <>\n    <Navigation/>\n    <Home/>\n    <Footer/>\n\n    <Switch>\n    <Route path = '/pizzaorder'>\n      <PizzaForm/>\n    </Route>\n    <Route path = '/'>\n      <App/>\n    </Route>\n    </Switch>\n    </>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport {BrowserRouter as Router} from 'react-router-dom'\n\n\nReactDOM.render(<Router><App /></Router>, document.getElementById(\"root\"));\n"],"sourceRoot":""}